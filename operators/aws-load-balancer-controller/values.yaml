# Default values for aws-load-balancer-controller.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

revisionHistoryLimit: 10

image:
  repository: public.ecr.aws/eks/aws-load-balancer-controller
  tag: v2.13.4
  pullPolicy: IfNotPresent

# The name of the Kubernetes cluster. A non-empty value is required
clusterName: my-project-dev-eks

# The AWS region for the kubernetes cluster
region: us-east-1

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations:
    # IAM role for service account (IRSA) - Using existing role
    eks.amazonaws.com/role-arn: arn:aws:iam::817100478429:role/dev-my-project-alb-controller-role
  # The name of the service account to use.
  name: aws-load-balancer-controller
  # Automount API credentials for a Service Account.
  automountServiceAccountToken: true

rbac:
  # Specifies whether rbac resources should be created
  create: true

podSecurityContext:
  fsGroup: 65534

securityContext:
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  allowPrivilegeEscalation: false

# Time period for the controller pod to do a graceful shutdown
terminationGracePeriodSeconds: 10

# Resource limits and requests
resources:
  limits:
    cpu: 200m
    memory: 500Mi
  requests:
    cpu: 100m
    memory: 200Mi

# priorityClassName specifies the PriorityClass to indicate the importance of controller pods
priorityClassName: system-cluster-critical

nodeSelector: {}

# Node tolerations for your EKS setup
tolerations:
  - key: "systempods"
    operator: "Equal"
    value: "true"
    effect: "NoSchedule"
  - key: "dedicated"
    operator: "Equal"
    value: "database"
    effect: "NoSchedule"

# affinity specifies a custom affinity for the controller pods
affinity: {}

# configureDefaultAffinity specifies whether to configure a default affinity for the controller pods
configureDefaultAffinity: true

topologySpreadConstraints: []

updateStrategy: {}

# serviceAnnotations contains annotations to be added to the provisioned webhook service resource
serviceAnnotations: {}

# deploymentAnnotations contains annotations for the controller deployment
deploymentAnnotations: {}

# Pod annotations
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8080"
  prometheus.io/path: "/metrics"

podLabels: {}

# additionalLabels -- Labels to add to each object of the chart.
additionalLabels: {}

# Enable cert-manager
enableCertManager: false

# cluster contains configurations specific to the kubernetes cluster
cluster:
  # Cluster DNS domain (required for requesting TLS certificates)
  dnsDomain: cluster.local

# The ingress class this controller will satisfy
ingressClass: alb

# ingressClassParams specify the IngressCLassParams that enforce settings for a set of Ingresses
ingressClassParams:
  create: true
  name:
  spec: {}

# To use IngressClass resource instead of annotation
createIngressClassResource: true

# The VPC ID for the Kubernetes cluster
vpcId: vpc-020bae43acb732eda

# This is alternative to vpcId - will be auto-detected
vpcTags: {}

# Custom AWS API Endpoints
awsApiEndpoints:

# Default target type for ALB/NLB
defaultTargetType: ip

# Enable Shield addon for ALB
enableShield: false

# Enable WAF addon for ALB
enableWaf: false

# Enable WAF V2 addon for ALB
enableWafv2: false

# Set the controller log level
logLevel: info

# The address the metric endpoint binds to
metricsBindAddr: ""

webhookConfig:
  # disableIngressValidation disables the validation of resources of kind Ingress
  disableIngressValidation:

# The TCP port the Webhook server binds to
webhookBindPort:

# webhookTLS specifies TLS cert/key for the webhook
webhookTLS:
  caCert:
  cert:
  key:

# keepTLSSecret specifies whether to reuse existing TLS secret for chart upgrade
keepTLSSecret: true

# Liveness probe configuration for the controller
livenessProbe:
  failureThreshold: 2
  httpGet:
    path: /healthz
    port: 61779
    scheme: HTTP
  initialDelaySeconds: 30
  timeoutSeconds: 10

# readiness probe configuration for the controller
readinessProbe:
  failureThreshold: 2
  httpGet:
    path: /readyz
    port: 61779
    scheme: HTTP
  successThreshold: 1
  initialDelaySeconds: 10
  timeoutSeconds: 10

# Environment variables to set for aws-load-balancer-controller pod
env: {}

# Specifies if aws-load-balancer-controller should be started in hostNetwork mode
hostNetwork: false

# Specifies the dnsPolicy that should be used for pods in the deployment
dnsPolicy:

# extraVolumeMounts are the additional volume mounts
extraVolumeMounts: []

# extraVolumes for the extraVolumeMounts
extraVolumes: []

# defaultTags are the tags to apply to all AWS resources managed by this controller
defaultTags:
  Environment: dev
  Project: my-project

# podDisruptionBudget specifies the disruption budget for the controller pods
podDisruptionBudget:
  maxUnavailable: 1

# externalManagedTags is the list of tag keys on AWS resources that will be managed externally
externalManagedTags: []

# enableEndpointSlices enables k8s EndpointSlices for IP targets instead of Endpoints
enableEndpointSlices:

# enableBackendSecurityGroup enables shared security group for backend traffic
enableBackendSecurityGroup:

# controllerConfig specifies controller configuration
controllerConfig:
  featureGates: {}

# objectSelector for webhook
objectSelector:
  matchExpressions: []
  matchLabels: {}

serviceMonitor:
  # Specifies whether a service monitor should be created
  enabled: false

# clusterSecretsPermissions lets you configure RBAC permissions for secret resources
clusterSecretsPermissions:
  allowAllSecrets: false

# ingressClassConfig contains configurations specific to the ingress class
ingressClassConfig:
  default: false

# enableServiceMutatorWebhook allows you enable the webhook for LoadBalancer services
enableServiceMutatorWebhook: true

# serviceMutatorWebhook contains configurations specific to the service mutator webhook
serviceMutatorWebhookConfig:
  failurePolicy: Fail
  objectSelector:
    matchExpressions: []
    matchLabels: {}
  operations:
    - CREATE

# podMutatorWebhookConfig contains configurations specific to the pod mutator webhook
podMutatorWebhookConfig:
  failurePolicy: Ignore
