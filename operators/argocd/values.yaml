# ArgoCD Helm Chart Values - Best Practices Configuration
# https://github.com/argoproj/argo-helm/tree/main/charts/argo-cd

global:
  # Image pull policy
  imagePullPolicy: IfNotPresent

# ArgoCD Server Configuration
server:
  # Disable ingress for localhost setup
  ingress:
    enabled: false

  # Configure service type for external access via LoadBalancer
  service:
    type: LoadBalancer
    port: 80
    targetPort: 8080

  # Security context
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 999
    fsGroup: 999

  # Resource limits and requests
  resources:
    limits:
      cpu: 500m
      memory: 256Mi
    requests:
      cpu: 50m
      memory: 64Mi

  # Additional command line arguments
  extraArgs:
    - --insecure # Remove this if using HTTPS

  # Tolerations for node taints
  tolerations:
    - key: "systempods"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"
    - key: "dedicated"
      operator: "Equal"
      value: "database"
      effect: "NoSchedule"

# ArgoCD Repository Server
repoServer:
  # Resource limits and requests
  resources:
    limits:
      cpu: 1000m
      memory: 512Mi
    requests:
      cpu: 10m
      memory: 64Mi

  # Security context
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 999
    fsGroup: 999

  # Tolerations for node taints
  tolerations:
    - key: "systempods"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"
    - key: "dedicated"
      operator: "Equal"
      value: "database"
      effect: "NoSchedule"

# ArgoCD Application Controller
controller:
  # Resource limits and requests
  resources:
    limits:
      cpu: 2000m
      memory: 2Gi
    requests:
      cpu: 250m
      memory: 1Gi

  # Security context
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 999
    fsGroup: 999

  # Tolerations for node taints
  tolerations:
    - key: "systempods"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"
    - key: "dedicated"
      operator: "Equal"
      value: "database"
      effect: "NoSchedule"

# ArgoCD Redis
redis:
  # Resource limits and requests
  resources:
    limits:
      cpu: 200m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 64Mi

  # Security context
  securityContext:
    runAsNonRoot: true
    runAsUser: 999

  # Tolerations for node taints
  tolerations:
    - key: "systempods"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"
    - key: "dedicated"
      operator: "Equal"
      value: "database"
      effect: "NoSchedule"

# ArgoCD ApplicationSet Controller
applicationSet:
  enabled: true
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

  # Tolerations for node taints
  tolerations:
    - key: "systempods"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"
    - key: "dedicated"
      operator: "Equal"
      value: "database"
      effect: "NoSchedule"

# ArgoCD Notifications Controller
notifications:
  enabled: true
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

  # Tolerations for node taints
  tolerations:
    - key: "systempods"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"
    - key: "dedicated"
      operator: "Equal"
      value: "database"
      effect: "NoSchedule"

# ArgoCD Dex Server (for OIDC)
dex:
  enabled: false # Enable if you need OIDC authentication
  resources:
    limits:
      cpu: 50m
      memory: 64Mi
    requests:
      cpu: 10m
      memory: 32Mi

# Configuration for ArgoCD
configs:
  # ArgoCD configuration
  cm:
    # URL for ArgoCD server (will be updated with LoadBalancer URL)
    url: https://argocd-server

    # Enable anonymous read-only access (disable in production)
    users.anonymous.enabled: "false"

    # Application instance label key
    application.instanceLabelKey: argocd.argoproj.io/instance

    # Server configuration
    server.rbac.log.enforce.enable: "true"

    # Repository configuration
    repositories: |
      - type: git
        url: https://github.com/NaserRaoofi/k8s-infra-repo
        name: k8s-infra-repo

  # RBAC configuration
  rbac:
    # Default policy
    policy.default: role:readonly

    # Admin users (update with your users)
    policy.csv: |
      p, role:admin, applications, *, */*, allow
      p, role:admin, clusters, *, *, allow
      p, role:admin, repositories, *, *, allow
      g, argocd-admins, role:admin

  # ArgoCD Server configuration
  params:
    # Disable admin user (use RBAC instead)
    server.disable.auth: false

    # Server configuration
    server.insecure: true # Set to false when using HTTPS

    # Repository server parallelism limit
    reposerver.parallelism.limit: "10"
